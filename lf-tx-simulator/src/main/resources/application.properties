app.version=0.0.3

mp.openapi.extensions.smallrye.info.title=Life Insurance Client service API
mp.openapi.extensions.smallrye.info.version=1.0.0
mp.openapi.extensions.smallrye.info.description=Just an example of MQ AMQP producer
mp.openapi.extensions.smallrye.info.termsOfService=Your terms here...
mp.openapi.extensions.smallrye.info.contact.name=IBM Automation - Solution Engineering
mp.openapi.extensions.smallrye.info.contact.url=http://https://ibm-cloud-architecture.github.io/refarch-eda/
mp.openapi.extensions.smallrye.info.license.name=Apache 2.0
mp.openapi.extensions.smallrye.info.license.url=https://www.apache.org/licenses/LICENSE-2.0.html

quarkus.swagger-ui.always-include=true

# IBM MQ settings
app.name="TxSimulator"
mq.host=localhost
mq.port=1414
mq.channel=DEV.APP.SVRCONN
mq.qmgr=QM1
mq.app_user=app
mq.app_password=passw0rd
mq.queue_name=DEV.QUEUE.1

#amqp-host=localhost
#amqp-port=5672
# amqp-username=admin
# amqp-password=passw0rd

%prod.kafka.sasl.mechanism=SSL
%prod.kafka.ssl.protocol=TLSv1.2
%prod.kafka.ssl.truststore.location=/deployments/certs/server/ca.p12
%prod.kafka.ssl.truststore.type=PKCS12
%prod.kafka.ssl.truststore.password=${KAFKA_CERT_PWD}
%prod.kafka.ssl.keystore.location=/deployments/certs/user/user.p12
%prod.kafka.ssl.keystore.password=${USER_CERT_PWD}
%prod.kafka.ssl.keystore.type=PKCS12

quarkus.kafka.devservices.topic-partitions.items=1
mp.messaging.outgoing.categories.connector=smallrye-kafka
mp.messaging.outgoing.categories.topic=${CATEGORY_TOPIC}
%prod.mp.messaging.outgoing.categories.acks=-1
%prod.mp.messaging.outgoing.categories.enable.idempotence=true
mp.messaging.outgoing.categories.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.categories.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
#mp.messaging.outgoing.lftx.use-anonymous-sender=false
#mp.messaging.outgoing.lftx.capabilities=queue
#%dev.mp.messaging.outgoing.lftx.address=RAWTX
#%prod.mp.messaging.outgoing.lftx.address=RAWTX